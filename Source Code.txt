/*******************************************************************************************

                             Generating Pseudorandom Numbers
     John Von Newmann's Middle Square Algorithm for Generation of Pseudorandom Numbers
            Linear Congruential Generator for Generation of Pseudorandom Numbers
                             Paridhi Agarwal RA2111019010048

********************************************************************************************/
#include<stdio.h>
#include<conio.h>
#include<math.h>
#include<stdlib.h>
int count_digit(long long, int);
int main()
{
	printf("Enter a Choice:\n1) Linear Congruential Generator\n2) Middle Square Algorithm\n");
	int ch;
	int xo,x1;
	int a,c,m;
	int i,j,n;
	int array[20];
	long long seed;
	long long p;
        int count;
	int divisor;
	int x[20];
	scanf("%d",&ch);
	switch(ch)
	{
	    case 1:
	    printf("Enter the seed value: ");
	    scanf("%d",&xo);
	    printf("Enter the constant multiplier: ");
	    scanf("%d",&a);
	    printf("Enter the increment: ");
	    scanf("%d",&c);
	    printf("Enter the modulus: ");
	    scanf("%d",&m);
	    printf("How many random numbers you want to generate: ");
	    scanf("%d",&n);
	    printf("\n");				
	    for(i=0;i<n;i++)
	    {
    		x1=(a*xo+c) %m;
		array[i]=x1;
		xo=x1;
	    }
	    printf("The generated random numbers are: ");
	    for(i=0;i<n;i++)
	    {
    		printf("%d",array[i]);
		printf("\t");
	    }
	    getch();
	    break;
	    case 2:
	    printf("Enter a number to generate the random number: ");
	    scanf("%lld",&seed);
	    p=seed;
	    int digit=0;
            digit=count_digit (p, digit);
	    count=digit;
	    printf("How many random number you want to generate: ");
	    scanf("%d",&n);
	    printf("\nThe random numbers are:\n");
	    for(i=0;i<n;i++)
	    {	
   	            seed=seed*seed;
		    p=seed;
		    digit=0;
		    digit=count_digit(p,digit);
		    digit=ceil(digit/4.0);
		    for(j=0;j<digit;j++)
		    {
			seed=seed/10;
		    }
		    divisor=pow(10,count);
		    seed=seed%divisor;
		    x[i]=seed;
		    printf("%lld\t",seed);
	    }
	    getch();
            break;
            default:
            printf("Wrong Choice!!!");
            break;
        }
	return 0;
}
int count_digit(long long seed,int digit)
{
	long long p;
	p=seed;
	while(p!=0) // Digit count
	{
		p=p/10;
		digit++;
	}
	return digit;
}